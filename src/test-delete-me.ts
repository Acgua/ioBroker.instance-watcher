const I1 = 2;
const I2 = 91;
const I3:number = 1016;

const xxx =
    (((((((0.622 * I2) / 100) * ((1.01325 * 10) ^ (((5.426651 - 2005.1 / (I1 + 273.15) + ((0.00013869 * ((I1 + 273.15) * (I1 + 273.15) - 293700)) / (I1 + 273.15)) * (10 ^ (0.000000000011965 * ((I1 + 273.15) * (I1 + 273.15) - 293700) * ((I1 + 273.15) * (I1 + 273.15) - 293700) - 1)) - 0.0044 * 10) ^ ((-0.0057148 * (374.11 - I1)) ^ 1.25)) + ((I1 + 273.15) / 647.3 - 0.422) * (0.577 - (I1 + 273.15) / 647.3) * Math.exp(0.000000000011965 * ((I1 + 273.15) * (I1 + 273.15) - 293700) * ((I1 + 273.15) * (I1 + 273.15) - 293700)) * 0.00980665))) /
        (I3 / 1000 - (I2 / 100) * ((1.01325 * 10) ^ (((5.426651 - 2005.1 / (I1 + 273.15) + ((0.00013869 * ((I1 + 273.15) * (I1 + 273.15) - 293700)) / (I1 + 273.15)) * (10 ^ (0.000000000011965 * ((I1 + 273.15) * (I1 + 273.15) - 293700) * ((I1 + 273.15) * (I1 + 273.15) - 293700) - 1)) - 0.0044 * 10) ^ ((-0.0057148 * (374.11 - I1)) ^ 1.25)) + ((I1 + 273.15) / 647.3 - 0.422) * (0.577 - (I1 + 273.15) / 647.3) * Math.exp(0.000000000011965 * ((I1 + 273.15) * (I1 + 273.15) - 293700) * ((I1 + 273.15) * (I1 + 273.15) - 293700)) * 0.00980665)))) *
        I3) /
        1000) *
        100000000) /
    ((I1 + 273.15) * 287.1);
